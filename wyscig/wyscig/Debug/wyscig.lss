
wyscig.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000152  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000088e  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068f  00000000  00000000  00000ac6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030f  00000000  00000000  00001155  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001464  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a1  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000278  00000000  00000000  00001829  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001aa1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 a7 00 	jmp	0x14e	; 0x14e <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
    DDRB = 0b111111;
  80:	8f e3       	ldi	r24, 0x3F	; 63
  82:	84 b9       	out	0x04, r24	; 4
	PORTD = 0b10000000; 
  84:	80 e8       	ldi	r24, 0x80	; 128
  86:	8b b9       	out	0x0b, r24	; 11
	int green = 0;
	int restart = 0;
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	90 e0       	ldi	r25, 0x00	; 0

int main(void)
{
    DDRB = 0b111111;
	PORTD = 0b10000000; 
	int green = 0;
  8c:	20 e0       	ldi	r18, 0x00	; 0
  8e:	30 e0       	ldi	r19, 0x00	; 0
	int restart = 0;
	
	int is_pressed(void)
	{
		if (!(PIND & (1 << PD7)))
  90:	4f 99       	sbic	0x09, 7	; 9
  92:	fe cf       	rjmp	.-4      	; 0x90 <main+0x10>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  94:	4f ef       	ldi	r20, 0xFF	; 255
  96:	50 e7       	ldi	r21, 0x70	; 112
  98:	62 e0       	ldi	r22, 0x02	; 2
  9a:	41 50       	subi	r20, 0x01	; 1
  9c:	50 40       	sbci	r21, 0x00	; 0
  9e:	60 40       	sbci	r22, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x1a>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x24>
  a4:	00 00       	nop
		{
			_delay_ms(50);
			if (!(PIND & (1 << PD7)))
  a6:	4f 99       	sbic	0x09, 7	; 9
  a8:	f3 cf       	rjmp	.-26     	; 0x90 <main+0x10>
  aa:	6f ef       	ldi	r22, 0xFF	; 255
  ac:	40 e7       	ldi	r20, 0x70	; 112
  ae:	52 e0       	ldi	r21, 0x02	; 2
  b0:	61 50       	subi	r22, 0x01	; 1
  b2:	40 40       	sbci	r20, 0x00	; 0
  b4:	50 40       	sbci	r21, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x30>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x3a>
  ba:	00 00       	nop
    {
		if (is_pressed())
		{
			_delay_ms(50);
			
			if (green == 0 && restart == 0)
  bc:	21 15       	cp	r18, r1
  be:	31 05       	cpc	r19, r1
  c0:	69 f5       	brne	.+90     	; 0x11c <main+0x9c>
  c2:	00 97       	sbiw	r24, 0x00	; 0
  c4:	09 f0       	breq	.+2      	; 0xc8 <main+0x48>
  c6:	40 c0       	rjmp	.+128    	; 0x148 <main+0xc8>
			{
				PORTB |= (1 << PB5);
  c8:	2d 9a       	sbi	0x05, 5	; 5
  ca:	4f ef       	ldi	r20, 0xFF	; 255
  cc:	59 e6       	ldi	r21, 0x69	; 105
  ce:	68 e1       	ldi	r22, 0x18	; 24
  d0:	41 50       	subi	r20, 0x01	; 1
  d2:	50 40       	sbci	r21, 0x00	; 0
  d4:	60 40       	sbci	r22, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
				_delay_ms(500);
				PORTB |= (1 << PB4);
  dc:	2c 9a       	sbi	0x05, 4	; 5
  de:	4f ef       	ldi	r20, 0xFF	; 255
  e0:	59 e6       	ldi	r21, 0x69	; 105
  e2:	68 e1       	ldi	r22, 0x18	; 24
  e4:	41 50       	subi	r20, 0x01	; 1
  e6:	50 40       	sbci	r21, 0x00	; 0
  e8:	60 40       	sbci	r22, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x64>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x6e>
  ee:	00 00       	nop
				_delay_ms(500);
				PORTB |= (1 << PB3);
  f0:	2b 9a       	sbi	0x05, 3	; 5
  f2:	4f ef       	ldi	r20, 0xFF	; 255
  f4:	59 e6       	ldi	r21, 0x69	; 105
  f6:	68 e1       	ldi	r22, 0x18	; 24
  f8:	41 50       	subi	r20, 0x01	; 1
  fa:	50 40       	sbci	r21, 0x00	; 0
  fc:	60 40       	sbci	r22, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x78>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x82>
 102:	00 00       	nop
				_delay_ms(500);
				PORTB |= (1 << PB2);
 104:	2a 9a       	sbi	0x05, 2	; 5
 106:	4f ef       	ldi	r20, 0xFF	; 255
 108:	59 e6       	ldi	r21, 0x69	; 105
 10a:	68 e1       	ldi	r22, 0x18	; 24
 10c:	41 50       	subi	r20, 0x01	; 1
 10e:	50 40       	sbci	r21, 0x00	; 0
 110:	60 40       	sbci	r22, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
				_delay_ms(500);
				PORTB |= (1 << PB1);
 118:	29 9a       	sbi	0x05, 1	; 5
 11a:	16 c0       	rjmp	.+44     	; 0x148 <main+0xc8>
			} 
			else if (green == 1 && restart == 0) 
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	29 f4       	brne	.+10     	; 0x12a <main+0xaa>
			{
				PORTB = 0b000000;
 120:	15 b8       	out	0x05, r1	; 5
				PORTB |= (1 << PB0);
 122:	28 9a       	sbi	0x05, 0	; 5
				
				restart = !restart;
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0f c0       	rjmp	.+30     	; 0x148 <main+0xc8>
			}
			else if (green == 1 && restart == 1)
 12a:	81 30       	cpi	r24, 0x01	; 1
 12c:	91 05       	cpc	r25, r1
 12e:	61 f4       	brne	.+24     	; 0x148 <main+0xc8>
			{
				PORTB &= ~(1 << PB0);
 130:	28 98       	cbi	0x05, 0	; 5
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	90 e7       	ldi	r25, 0x70	; 112
 136:	42 e0       	ldi	r20, 0x02	; 2
 138:	81 50       	subi	r24, 0x01	; 1
 13a:	90 40       	sbci	r25, 0x00	; 0
 13c:	40 40       	sbci	r20, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0xb8>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0xc2>
 142:	00 00       	nop
				_delay_ms(50);
				
				restart = !restart;
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	51 e0       	ldi	r21, 0x01	; 1
 14a:	25 27       	eor	r18, r21
 14c:	a1 cf       	rjmp	.-190    	; 0x90 <main+0x10>

0000014e <_exit>:
 14e:	f8 94       	cli

00000150 <__stop_program>:
 150:	ff cf       	rjmp	.-2      	; 0x150 <__stop_program>
